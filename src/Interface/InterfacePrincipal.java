/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Dados.JurosCompostos;
import Dados.JurosSimples;
import java.awt.Color;
import java.text.DecimalFormat;
import java.text.Format;
import javax.swing.JOptionPane;

/**
 *
 * @author Suporte
 */
public class InterfacePrincipal extends javax.swing.JFrame {

    /**
     * Creates new form InterfacePrincipal
     */
    public InterfacePrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jrJurosSimples = new javax.swing.JRadioButton();
        jrJurosCompostos = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtCapital = new javax.swing.JTextField();
        jtPeriodo = new javax.swing.JTextField();
        jtTaxa = new javax.swing.JTextField();
        jtJuros = new javax.swing.JTextField();
        cbTaxa = new javax.swing.JComboBox<>();
        cbPeriodo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jrCapital = new javax.swing.JRadioButton();
        jrTaxa = new javax.swing.JRadioButton();
        jrPeriodo = new javax.swing.JRadioButton();
        jrJuros = new javax.swing.JRadioButton();
        cbTipoCalculo = new javax.swing.JComboBox();
        jrMontate = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jtMontate = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Tipo de Juros"));

        buttonGroup1.add(jrJurosSimples);
        jrJurosSimples.setText("Juros Simples");

        buttonGroup1.add(jrJurosCompostos);
        jrJurosCompostos.setText("Juros Compostos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(jrJurosSimples)
                .addGap(18, 18, 18)
                .addComponent(jrJurosCompostos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrJurosSimples)
                    .addComponent(jrJurosCompostos))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dados"));

        jLabel1.setText("Capital: ");

        jLabel2.setText("Taxa: ");

        jLabel3.setText("Período: ");

        jLabel4.setText("Juros: ");

        jtPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtPeriodoActionPerformed(evt);
            }
        });

        cbTaxa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Selecione--", "Mensal", "Anual" }));

        cbPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Selecione--", "Mes(es)", "Ano(s)" }));

        jButton1.setBackground(new java.awt.Color(58, 65, 84));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Calcular ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(217, 81, 51));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Limpar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("%");

        jLabel7.setText("Qual dado deseja obter?");

        buttonGroup2.add(jrCapital);
        jrCapital.setText("Capital");
        jrCapital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrCapitalActionPerformed(evt);
            }
        });

        buttonGroup2.add(jrTaxa);
        jrTaxa.setText("Taxa");
        jrTaxa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrTaxaActionPerformed(evt);
            }
        });

        buttonGroup2.add(jrPeriodo);
        jrPeriodo.setText("Período");
        jrPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrPeriodoActionPerformed(evt);
            }
        });

        buttonGroup2.add(jrJuros);
        jrJuros.setText("Juros");
        jrJuros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrJurosActionPerformed(evt);
            }
        });

        cbTipoCalculo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Selecione--", "Juros", "Montate" }));

        buttonGroup2.add(jrMontate);
        jrMontate.setText("Montante");
        jrMontate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrMontateActionPerformed(evt);
            }
        });

        jLabel8.setText("Montate:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(24, Short.MAX_VALUE)
                        .addComponent(jrCapital)
                        .addGap(18, 18, 18)
                        .addComponent(jrTaxa)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(10, 10, 10)
                                .addComponent(jtJuros, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtCapital, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtMontate, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jtTaxa)
                                .addGap(3, 3, 3)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbTaxa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jtPeriodo)
                                .addGap(26, 26, 26)
                                .addComponent(cbPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jrPeriodo)
                        .addGap(18, 18, 18)
                        .addComponent(jrJuros)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrMontate)
                        .addGap(25, 25, 25))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(cbTipoCalculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbTipoCalculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrCapital)
                    .addComponent(jrTaxa)
                    .addComponent(jrPeriodo)
                    .addComponent(jrJuros)
                    .addComponent(jrMontate))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jtCapital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtTaxa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTaxa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jtJuros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jtMontate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtPeriodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtPeriodoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(jrJurosCompostos.isSelected() == false && jrJurosSimples.isSelected() == false){
            JOptionPane.showMessageDialog(null, "Selecione um Tipo de Juros.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if(cbTipoCalculo.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Selecione se deseja Juros ou Montate.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if(jrCapital.isSelected() == false && jrJuros.isSelected() == false && jrMontate.isSelected() == false && jrPeriodo.isSelected() == false && jrTaxa.isSelected() == false){
            JOptionPane.showMessageDialog(null, "Selecione qual dado deseja obter.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if(cbPeriodo.getSelectedIndex() == 0 ){
            JOptionPane.showMessageDialog(null, "Selecione um perído(Mes(es) ou Ano(s)).", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if(cbTaxa.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Selecione um perído de Taxa(Mensal ou Anual).", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        if(jrJurosCompostos.isSelected()){
            if(cbTipoCalculo.getSelectedIndex() == 1){
                if(jrCapital.isSelected()){
                    if(jtJuros.getText().equals("")|| jtPeriodo.getText().equals("") || jtTaxa.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Taxa , Juros ou Período) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    }
                    double taxa, periodo, juros, capital;
                    int tipoPeriodo, tipoTaxa;
                    taxa = Float.parseFloat(jtTaxa.getText());
                    periodo = Float.parseFloat(jtPeriodo.getText());
                    juros = Float.parseFloat(jtJuros.getText());
                    if(taxa < 0 || periodo < 0){
                        JOptionPane.showMessageDialog(null, "Taxa e Período devem ser Maiores que 0 Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosCompostos novo = new JurosCompostos();
                    novo.setJuros(juros);
                    novo.setPeriodo(periodo);
                    novo.setTaxa(taxa);
                    capital = novo.obterCapital(tipoTaxa, tipoPeriodo);
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtCapital.setText(decimal.format(capital));
                    jtCapital.setBackground(Color.yellow);

                }else if (jrTaxa.isSelected()){
                    if(jtJuros.getText().equals("")|| jtPeriodo.getText().equals("") || jtCapital.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Capital , Juros ou Período) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtCapital.requestFocus();
                        return;    
                    }
                    double taxa, periodo, juros, capital;
                    int tipoPeriodo, tipoTaxa;
                    capital = Float.parseFloat(jtCapital.getText());
                    periodo = Float.parseFloat(jtPeriodo.getText());
                    juros = Float.parseFloat(jtJuros.getText());
                    if(periodo < 0){
                        JOptionPane.showMessageDialog(null, "Período deve ser Maior que 0 Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtPeriodo.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosCompostos novo = new JurosCompostos();
                    novo.setCapital(capital);
                    novo.setJuros(juros);
                    novo.setPeriodo(periodo);
                    taxa = novo.obterTaxa(tipoTaxa, tipoPeriodo);
                    taxa = taxa * 100;
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtTaxa.setText(decimal.format(taxa));
                    jtTaxa.setBackground(Color.yellow);
                }else if(jrPeriodo.isSelected()){
                    if(jtJuros.getText().equals("")|| jtTaxa.getText().equals("") || jtCapital.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Capital , Juros ou Taxa) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;    
                    }
                    double taxa, periodo, juros, capital;
                    int tipoPeriodo, tipoTaxa;
                    capital = Float.parseFloat(jtCapital.getText());
                    taxa = Float.parseFloat(jtTaxa.getText());
                    juros = Float.parseFloat(jtJuros.getText());
                    if(taxa < 0){
                        JOptionPane.showMessageDialog(null, "Taxa deve ser Maior que 0 Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosCompostos novo = new JurosCompostos();
                    novo.setJuros(juros);
                    novo.setCapital(capital);
                    novo.setTaxa(taxa);
                    periodo = novo.obterPeriodo(tipoTaxa, tipoPeriodo);
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtPeriodo.setText(decimal.format(periodo));
                    jtPeriodo.setBackground(Color.yellow);
                    
                }else if(jrJuros.isSelected()){
                    if(jtPeriodo.getText().equals("")|| jtTaxa.getText().equals("") || jtCapital.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Capital , Periodo ou Taxa) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;    
                    }
                    double taxa, periodo, juros, capital;
                    int tipoPeriodo, tipoTaxa;
                    capital = Float.parseFloat(jtCapital.getText());
                    taxa = Float.parseFloat(jtTaxa.getText());
                    periodo = Float.parseFloat(jtPeriodo.getText());
                    if(taxa < 0 || periodo < 0){
                        JOptionPane.showMessageDialog(null, "Taxa e Periodo devem ser Maiores que 0 Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosCompostos novo = new JurosCompostos();
                    novo.setPeriodo(periodo);
                    novo.setCapital(capital);
                    novo.setTaxa(taxa);
                    juros = novo.obterJuros(tipoTaxa, tipoPeriodo);
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtJuros.setText(decimal.format(juros));
                    jtJuros.setBackground(Color.yellow);
                }
            }else{
                if(jrCapital.isSelected()){
                    if(jtMontate.getText().equals("")|| jtPeriodo.getText().equals("") || jtTaxa.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Taxa , Montante ou Período) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    }
                    double taxa, periodo, montate, capital;
                    int tipoPeriodo, tipoTaxa;
                    taxa = Float.parseFloat(jtTaxa.getText());
                    periodo = Float.parseFloat(jtPeriodo.getText());
                    montate = Float.parseFloat(jtMontate.getText());
                    if(taxa < 0 || periodo < 0){
                        JOptionPane.showMessageDialog(null, "Taxa e Período devem ser Maiores que 0 Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosCompostos novo = new JurosCompostos();
                    novo.setMontate(montate);
                    novo.setPeriodo(periodo);
                    novo.setTaxa(taxa);
                    capital = novo.obterCapitalMontate(tipoTaxa, tipoPeriodo);
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtCapital.setText(decimal.format(capital));
                    jtCapital.setBackground(Color.yellow);

                }else if (jrTaxa.isSelected()){
                    if(jtMontate.getText().equals("")|| jtPeriodo.getText().equals("") || jtCapital.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Capital , Montate ou Período) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtCapital.requestFocus();
                        return;    
                    }
                    double taxa, periodo, montate, capital;
                    int tipoPeriodo, tipoTaxa;
                    capital = Float.parseFloat(jtCapital.getText());
                    periodo = Float.parseFloat(jtPeriodo.getText());
                    montate = Float.parseFloat(jtMontate.getText());
                    if(periodo < 0){
                        JOptionPane.showMessageDialog(null, "Período deve ser Maior que 0 Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtPeriodo.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosCompostos novo = new JurosCompostos();
                    novo.setCapital(capital);
                    novo.setMontate(montate);
                    novo.setPeriodo(periodo);
                    taxa = novo.obterTaxaMontate(tipoTaxa, tipoPeriodo);
                    taxa = taxa * 100;
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtTaxa.setText(decimal.format(taxa));
                    jtTaxa.setBackground(Color.yellow);
                }else if(jrPeriodo.isSelected()){
                    if(jtMontate.getText().equals("")|| jtTaxa.getText().equals("") || jtCapital.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Capital , Montante ou Taxa) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;    
                    }
                    double taxa, periodo, montante, capital;
                    int tipoPeriodo, tipoTaxa;
                    capital = Float.parseFloat(jtCapital.getText());
                    taxa = Float.parseFloat(jtTaxa.getText());
                    montante = Float.parseFloat(jtMontate.getText());
                    if(taxa < 0){
                        JOptionPane.showMessageDialog(null, "Taxa deve ser Maior que 0 Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosCompostos novo = new JurosCompostos();
                    novo.setMontate(montante);
                    novo.setCapital(capital);
                    novo.setTaxa(taxa);
                    periodo = novo.obterPeriodoMontate(tipoTaxa, tipoPeriodo);
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtPeriodo.setText(decimal.format(periodo));
                    jtPeriodo.setBackground(Color.yellow);
                    
                }else if(jrMontate.isSelected()){
                    if(jtPeriodo.getText().equals("")|| jtTaxa.getText().equals("") || jtCapital.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Capital , Periodo ou Taxa) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;    
                    }
                    double taxa, periodo, montante, capital;
                    int tipoPeriodo, tipoTaxa;
                    capital = Float.parseFloat(jtCapital.getText());
                    taxa = Float.parseFloat(jtTaxa.getText());
                    periodo = Float.parseFloat(jtPeriodo.getText());
                    if(taxa < 0 || periodo < 0){
                        JOptionPane.showMessageDialog(null, "Taxa e Periodo devem ser Maiores que 0 Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosCompostos novo = new JurosCompostos();
                    novo.setPeriodo(periodo);
                    novo.setCapital(capital);
                    novo.setTaxa(taxa);
                    montante = novo.obterMontate(tipoTaxa, tipoPeriodo);
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtMontate.setText(decimal.format(montante));
                    jtMontate.setBackground(Color.yellow);
                }
            }
        }else{
            if(cbTipoCalculo.getSelectedIndex() == 1){
                if(jrCapital.isSelected()){
                    if(jtJuros.getText().equals("")|| jtPeriodo.getText().equals("") || jtTaxa.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Taxa , Juros ou Período) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    }
                    double taxa, periodo, juros, capital;
                    int tipoPeriodo, tipoTaxa;
                    taxa = Float.parseFloat(jtTaxa.getText());
                    periodo = Float.parseFloat(jtPeriodo.getText());
                    juros = Float.parseFloat(jtJuros.getText());
                    if(taxa < 0 || periodo < 0 || juros < 0){
                        JOptionPane.showMessageDialog(null, "Taxa Juros e Período devem ser Maiores que 0 Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosSimples novo = new JurosSimples();
                    novo.setJuros(juros);
                    novo.setPeriodo(periodo);
                    novo.setTaxa(taxa);
                    capital = novo.obterCapital(tipoTaxa, tipoPeriodo);
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtCapital.setText(decimal.format(capital));
                    jtCapital.setBackground(Color.yellow);

                }else if (jrTaxa.isSelected()){
                    if(jtJuros.getText().equals("")|| jtPeriodo.getText().equals("") || jtCapital.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Capital , Juros ou Período) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtCapital.requestFocus();
                        return;    
                    }
                    double taxa, periodo, juros, capital;
                    int tipoPeriodo, tipoTaxa;
                    capital = Float.parseFloat(jtCapital.getText());
                    periodo = Float.parseFloat(jtPeriodo.getText());
                    juros = Float.parseFloat(jtJuros.getText());
                    if(periodo < 0 || capital < 0 || juros < 0){
                        JOptionPane.showMessageDialog(null, "Período, Taxa e Capital devem ser Maiores que 0 Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtPeriodo.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosSimples novo = new JurosSimples();
                    novo.setCapital(capital);
                    novo.setJuros(juros);
                    novo.setPeriodo(periodo);
                    taxa = novo.obterTaxa(tipoTaxa, tipoPeriodo);
                    taxa = taxa * 100;
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtTaxa.setText(decimal.format(taxa));
                    jtTaxa.setBackground(Color.yellow);
                }else if(jrPeriodo.isSelected()){
                    if(jtJuros.getText().equals("")|| jtTaxa.getText().equals("") || jtCapital.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Capital , Juros ou Taxa) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;    
                    }
                    double taxa, periodo, juros, capital;
                    int tipoPeriodo, tipoTaxa;
                    capital = Float.parseFloat(jtCapital.getText());
                    taxa = Float.parseFloat(jtTaxa.getText());
                    juros = Float.parseFloat(jtJuros.getText());
                    if(taxa < 0 || juros < 0 || capital < 0){
                        JOptionPane.showMessageDialog(null, "Taxa, Capital e Juros devem ser Maiores que 0 Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosSimples novo = new JurosSimples();
                    novo.setJuros(juros);
                    novo.setCapital(capital);
                    novo.setTaxa(taxa);
                    periodo = novo.obterPeriodo(tipoTaxa, tipoPeriodo);
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtPeriodo.setText(decimal.format(periodo));
                    jtPeriodo.setBackground(Color.yellow);
                    
                }else if(jrJuros.isSelected()){
                    if(jtPeriodo.getText().equals("")|| jtTaxa.getText().equals("") || jtCapital.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Capital , Periodo ou Taxa) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;    
                    }
                    double taxa, periodo, juros, capital;
                    int tipoPeriodo, tipoTaxa;
                    capital = Float.parseFloat(jtCapital.getText());
                    taxa = Float.parseFloat(jtTaxa.getText());
                    periodo = Float.parseFloat(jtPeriodo.getText());
                    if(taxa < 0 || periodo < 0 || capital < 0){
                        JOptionPane.showMessageDialog(null, "Taxa, Periodo e Capital devem ser Maiores que 0 Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosSimples novo = new JurosSimples();
                    novo.setPeriodo(periodo);
                    novo.setCapital(capital);
                    novo.setTaxa(taxa);
                    juros = novo.obterJuros(tipoTaxa, tipoPeriodo);
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtJuros.setText(decimal.format(juros));
                    jtJuros.setBackground(Color.yellow);
                }
            }else{
                if(jrCapital.isSelected()){
                    if(jtMontate.getText().equals("")|| jtPeriodo.getText().equals("") || jtTaxa.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Taxa , Montante ou Período) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    }
                    double taxa, periodo, montate, capital;
                    int tipoPeriodo, tipoTaxa;
                    taxa = Float.parseFloat(jtTaxa.getText());
                    periodo = Float.parseFloat(jtPeriodo.getText());
                    montate = Float.parseFloat(jtMontate.getText());
                    if(taxa < 0 || periodo < 0 || montate < 0){
                        JOptionPane.showMessageDialog(null, "Taxa, Montate e Período devem ser Maiores que 0 Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosSimples novo = new JurosSimples();
                    novo.setMontate(montate);
                    novo.setPeriodo(periodo);
                    novo.setTaxa(taxa);
                    capital = novo.obterCapitalMontate(tipoTaxa, tipoPeriodo);
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtCapital.setText(decimal.format(capital));
                    jtCapital.setBackground(Color.yellow);

                }else if (jrTaxa.isSelected()){
                    if(jtMontate.getText().equals("")|| jtPeriodo.getText().equals("") || jtCapital.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Capital , Montate ou Período) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtCapital.requestFocus();
                        return;    
                    }
                    double taxa, periodo, montante, capital;
                    int tipoPeriodo, tipoTaxa;
                    capital = Float.parseFloat(jtCapital.getText());
                    periodo = Float.parseFloat(jtPeriodo.getText());
                    montante = Float.parseFloat(jtMontate.getText());
                    if(periodo < 0 || capital < 0 || montante < 0 || montante < capital){
                        JOptionPane.showMessageDialog(null, "aqui Período, Capital e Montante devem ser Maiores que 0 e Montate > Capital Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtPeriodo.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosSimples novo = new JurosSimples();
                    novo.setCapital(capital);
                    novo.setMontate(montante);
                    novo.setPeriodo(periodo);
                    taxa = novo.obterTaxaMontate(tipoTaxa, tipoPeriodo);
                    taxa = taxa * 100;
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    
                    jtTaxa.setText(decimal.format(taxa));
                    jtTaxa.setBackground(Color.yellow);
                }else if(jrPeriodo.isSelected()){
                    if(jtMontate.getText().equals("")|| jtTaxa.getText().equals("") || jtCapital.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Capital , Montante ou Taxa) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;    
                    }
                    double taxa, periodo, montante, capital;
                    int tipoPeriodo, tipoTaxa;
                    capital = Float.parseFloat(jtCapital.getText());
                    taxa = Float.parseFloat(jtTaxa.getText());
                    montante = Float.parseFloat(jtMontate.getText());
                    if(taxa < 0 || montante < 0 || capital < 0 || montante < capital){
                        JOptionPane.showMessageDialog(null, "Taxa, Montante e Capital  devem ser Maiores que 0 e Montante maior que Capital Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosSimples novo = new JurosSimples();
                    novo.setMontate(montante);
                    novo.setCapital(capital);
                    novo.setTaxa(taxa);
                    periodo = novo.obterPeriodoMontate(tipoTaxa, tipoPeriodo);
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtPeriodo.setText(decimal.format(periodo));
                    jtPeriodo.setBackground(Color.yellow);
                    
                }else if(jrMontate.isSelected()){
                    if(jtPeriodo.getText().equals("")|| jtTaxa.getText().equals("") || jtCapital.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Campo Obrigatório Não Preenchido (Capital , Periodo ou Taxa) Verifique", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;    
                    }
                    double taxa, periodo, montante, capital;
                    int tipoPeriodo, tipoTaxa;
                    capital = Float.parseFloat(jtCapital.getText());
                    taxa = Float.parseFloat(jtTaxa.getText());
                    periodo = Float.parseFloat(jtPeriodo.getText());
                    if(taxa < 0 || periodo < 0 || capital < 0){
                        JOptionPane.showMessageDialog(null, "Taxa, Capital e Periodo devem ser Maiores que 0 Verifique.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        jtTaxa.requestFocus();
                        return;
                    }
                    tipoPeriodo = cbPeriodo.getSelectedIndex();
                    tipoTaxa = cbTaxa.getSelectedIndex();
                    JurosSimples novo = new JurosSimples();
                    novo.setPeriodo(periodo);
                    novo.setCapital(capital);
                    novo.setTaxa(taxa);
                    montante = novo.obterMontate(tipoTaxa, tipoPeriodo);
                    DecimalFormat decimal = new DecimalFormat("0.00");
                    jtMontate.setText(decimal.format(montante));
                    jtMontate.setBackground(Color.yellow);
                }
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jrCapitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrCapitalActionPerformed
        jtCapital.setEditable(false);
        jtJuros.setEditable(true);
        jtMontate.setEditable(true);
        jtPeriodo.setEditable(true);
        jtTaxa.setEditable(true);
    }//GEN-LAST:event_jrCapitalActionPerformed

    private void jrTaxaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrTaxaActionPerformed
        jtCapital.setEditable(true);
        jtJuros.setEditable(true);
        jtMontate.setEditable(true);
        jtPeriodo.setEditable(true);
        jtTaxa.setEditable(false);    
    }//GEN-LAST:event_jrTaxaActionPerformed

    private void jrPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrPeriodoActionPerformed
        jtCapital.setEditable(true);
        jtJuros.setEditable(true);
        jtMontate.setEditable(true);
        jtPeriodo.setEditable(false);
        jtTaxa.setEditable(true); 
    }//GEN-LAST:event_jrPeriodoActionPerformed

    private void jrJurosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrJurosActionPerformed
        jtCapital.setEditable(true);
        jtJuros.setEditable(false);
        jtMontate.setEditable(true);
        jtPeriodo.setEditable(true);
        jtTaxa.setEditable(true); 
    }//GEN-LAST:event_jrJurosActionPerformed

    private void jrMontateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrMontateActionPerformed
        jtCapital.setEditable(true);
        jtJuros.setEditable(true);
        jtMontate.setEditable(false);
        jtPeriodo.setEditable(true);
        jtTaxa.setEditable(true); 
    }//GEN-LAST:event_jrMontateActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jtCapital.setEditable(true);
        jtJuros.setEditable(true);
        jtMontate.setEditable(true);
        jtPeriodo.setEditable(true);
        jtTaxa.setEditable(true);
        jtCapital.setBackground(Color.white);
        jtJuros.setBackground(Color.white);
        jtMontate.setBackground(Color.white);
        jtPeriodo.setBackground(Color.white);
        jtTaxa.setBackground(Color.white);
        jtCapital.setText("");
        jtJuros.setText("");
        jtMontate.setText("");
        jtPeriodo.setText("");
        jtTaxa.setText("");
        buttonGroup1.clearSelection();
        buttonGroup2.clearSelection();
        cbPeriodo.setSelectedIndex(0);
        cbTaxa.setSelectedIndex(0);
        cbTipoCalculo.setSelectedIndex(0);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfacePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfacePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfacePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfacePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfacePrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbPeriodo;
    private javax.swing.JComboBox<String> cbTaxa;
    private javax.swing.JComboBox cbTipoCalculo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jrCapital;
    private javax.swing.JRadioButton jrJuros;
    private javax.swing.JRadioButton jrJurosCompostos;
    private javax.swing.JRadioButton jrJurosSimples;
    private javax.swing.JRadioButton jrMontate;
    private javax.swing.JRadioButton jrPeriodo;
    private javax.swing.JRadioButton jrTaxa;
    private javax.swing.JTextField jtCapital;
    private javax.swing.JTextField jtJuros;
    private javax.swing.JTextField jtMontate;
    private javax.swing.JTextField jtPeriodo;
    private javax.swing.JTextField jtTaxa;
    // End of variables declaration//GEN-END:variables
}
